'use strict';

var expect = require('chai').expect,
    app = require('../app'),
    _ = require('lodash');

describe('csv to geojson', function() {
    it('should convert a csv row to a geojson object', function() {
        
        var csvRow = '1,100,54321.345,12345.453,10.1,0.003,\"green\"';
        var csvRowNaN = '1,100,qasd.3sd5,123sd45.45sd3,10.1,0.003,\"green\"';
        var csvRowTooShort = '54321.345,12345.453,10.1,0.003,\"green\"';

        var geoJSON = {
            'type' : 'Feature',
            'geometry' : {
                'type' : 'Point',
                'coordinates' : [12345.453, 54321.345]
            },
            'properties' : {
                'speed' : 10.1,
                'measurement' : 0.003,
                'quality' : "green",
                'roadstarID' : 1
            }
        };

        expect(app.rowToGeoJSON(csvRow)).to.eql(geoJSON);
        expect(app.rowToGeoJSON.bind(app, csvRowNaN)).to.throw(Error, 'latitude is NaN');
        expect(app.rowToGeoJSON.bind(app, csvRowTooShort)).to.throw(Error, 'number of columns is 5. Expected 7');
    });

    it('should convert a csv file string into an array of geojson objects', function() {
        
        var csvRow1 = '1,100,54321.345,12345.453,10.1,0.003,\"green\"';
        var csvRow2 = '2,100,54321.345,12345.453,10.1,0.003,\"green\"';
        var csvRow3 = '3,100,asd54asd321.34ad5,12345.453,10.1,0.003,\"green\"';
        var csvRow4 = '4,100,54321.345,12345.453,10.1,0.003,\"green\"';
        var csv = csvRow1+'\n'+csvRow2+'\n'+csvRow3+'\n'+csvRow4;

        var geoJSON1 = {
            'type' : 'Feature',
            'geometry' : {
                'type' : 'Point',
                'coordinates' : [12345.453, 54321.345]
            },
            'properties' : {
                'speed' : 10.1,
                'measurement' : 0.003,
                'quality' : "green",
                'roadstarID' : 1
            }
        };

        var geoJSON2 = _.clone(geoJSON1, true);
        geoJSON2.properties.roadstarID = 2;
        var geoJSON4 = _.clone(geoJSON1, true);
        geoJSON4.properties.roadstarID = 4;
        var result = [geoJSON1, geoJSON2, geoJSON4];

        expect(app.csvToGeoJSON(csv)).to.have.length(3)
        .and.to.eql(result);

    });
});